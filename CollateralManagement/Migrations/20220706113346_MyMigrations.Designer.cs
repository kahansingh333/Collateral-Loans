// <auto-generated />
using System;
using CollateralManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollateralManagement.Migrations
{
    [DbContext(typeof(CollateralDbContext))]
    [Migration("20220706113346_MyMigrations")]
    partial class MyMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralGold", b =>
                {
                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.Property<double>("GoldDepriciationRate")
                        .HasColumnType("float");

                    b.Property<string>("GoldOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GoldPledgedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("GoldRateperGram")
                        .HasColumnType("float");

                    b.Property<int>("GoldWeightinGrams")
                        .HasColumnType("int");

                    b.Property<int>("YearInGoldBought")
                        .HasColumnType("int");

                    b.HasKey("CollateralId");

                    b.ToTable("CollateralGold");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralHouse", b =>
                {
                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.Property<long>("CurrentLandPricePerSqFt")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentStructurePrice")
                        .HasColumnType("bigint");

                    b.Property<string>("HouseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseArea")
                        .HasColumnType("int");

                    b.Property<int>("HouseDepriciationRate")
                        .HasColumnType("int");

                    b.Property<string>("HouseOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PledgedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearinBuilt")
                        .HasColumnType("int");

                    b.HasKey("CollateralId");

                    b.ToTable("CollateralHouse");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralLand", b =>
                {
                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.Property<string>("LandAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandArea")
                        .HasColumnType("int");

                    b.Property<int>("LandDepriciationRate")
                        .HasColumnType("int");

                    b.Property<string>("LandOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PledgedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Pricepersquarefeet")
                        .HasColumnType("bigint");

                    b.Property<int>("YearInLandBought")
                        .HasColumnType("int");

                    b.HasKey("CollateralId");

                    b.ToTable("CollateralLand");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.Collaterals", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CollateralType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CollateralLoans");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralGold", b =>
                {
                    b.HasOne("CollateralManagement.Collateral.Collaterals", "Collaterals")
                        .WithMany()
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaterals");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralHouse", b =>
                {
                    b.HasOne("CollateralManagement.Collateral.Collaterals", "Collaterals")
                        .WithMany()
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaterals");
                });

            modelBuilder.Entity("CollateralManagement.Collateral.CollateralLand", b =>
                {
                    b.HasOne("CollateralManagement.Collateral.Collaterals", "Collaterals")
                        .WithMany()
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaterals");
                });
#pragma warning restore 612, 618
        }
    }
}
