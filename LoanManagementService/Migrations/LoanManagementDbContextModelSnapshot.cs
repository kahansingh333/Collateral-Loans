// <auto-generated />
using LoanManagementModule.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanManagementService.Migrations
{
    [DbContext(typeof(LoanManagementDbContext))]
    partial class LoanManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanManagementModule.Models.Collateral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collaterals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "50 gms of gold Bought in January 2017 From KK Jewellery in Hyderabad"
                        },
                        new
                        {
                            Id = 2,
                            Description = "3000 sq feet Land Located in Anantapur Bought in 2015 From JJ Properties, Now with Coconut Plantation"
                        },
                        new
                        {
                            Id = 3,
                            Description = "1500 sq feet Two storeyed House with Two Bedrooms built in 2010 located in Hyderabad"
                        },
                        new
                        {
                            Id = 4,
                            Description = "3500 sq feet Land Located in KR puram Bangalore Bought in 2010 from private owner ,Now with Banana Plantation"
                        },
                        new
                        {
                            Id = 5,
                            Description = "70 gms of gold bought in 2019 From JO Jewellary in Chennai"
                        },
                        new
                        {
                            Id = 6,
                            Description = "2000 sq feet Three storeyed home built in 2007 located in Sarjapur Bangalore Bought from private owner"
                        },
                        new
                        {
                            Id = 7,
                            Description = "400 gms of gold bought in 2010 from RR Jewellary Coimbatore"
                        });
                });

            modelBuilder.Entity("LoanManagementModule.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerAccountNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomerAge")
                        .HasColumnType("int");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerPhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerAccountNumber = 1301567L,
                            CustomerAge = 21,
                            CustomerFirstName = "Saicharan",
                            CustomerLastName = "M",
                            CustomerPhoneNumber = 8317670705L
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerAccountNumber = 1501322L,
                            CustomerAge = 21,
                            CustomerFirstName = "George",
                            CustomerLastName = "Antony",
                            CustomerPhoneNumber = 7337004089L
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerAccountNumber = 1439087L,
                            CustomerAge = 21,
                            CustomerFirstName = "Varun",
                            CustomerLastName = "Raj",
                            CustomerPhoneNumber = 9312456892L
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerAccountNumber = 1209873L,
                            CustomerAge = 21,
                            CustomerFirstName = "Vivek",
                            CustomerLastName = "Boppudi",
                            CustomerPhoneNumber = 6303129879L
                        },
                        new
                        {
                            CustomerId = 5,
                            CustomerAccountNumber = 1908765L,
                            CustomerAge = 45,
                            CustomerFirstName = "Ram",
                            CustomerLastName = "Raj",
                            CustomerPhoneNumber = 6324143454L
                        },
                        new
                        {
                            CustomerId = 6,
                            CustomerAccountNumber = 2010201L,
                            CustomerAge = 35,
                            CustomerFirstName = "Srujana",
                            CustomerLastName = "K",
                            CustomerPhoneNumber = 9808997761L
                        },
                        new
                        {
                            CustomerId = 7,
                            CustomerAccountNumber = 1788765L,
                            CustomerAge = 27,
                            CustomerFirstName = "Chandan",
                            CustomerLastName = "M",
                            CustomerPhoneNumber = 7665663241L
                        });
                });

            modelBuilder.Entity("LoanManagementModule.Models.CustomersLoan", b =>
                {
                    b.Property<int>("CustomerLoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("EMI")
                        .HasColumnType("float");

                    b.Property<bool>("IsCollateraled")
                        .HasColumnType("bit");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("SanctionedAmount")
                        .HasColumnType("int");

                    b.HasKey("CustomerLoanId");

                    b.HasIndex("CollateralId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("LoanId");

                    b.ToTable("CustomersLoans");

                    b.HasData(
                        new
                        {
                            CustomerLoanId = 1,
                            CollateralId = 3,
                            CustomerId = 2,
                            EMI = 30000.0,
                            IsCollateraled = false,
                            LoanId = 3,
                            SanctionedAmount = 2000000
                        },
                        new
                        {
                            CustomerLoanId = 2,
                            CollateralId = 1,
                            CustomerId = 3,
                            EMI = 4300.0,
                            IsCollateraled = false,
                            LoanId = 1,
                            SanctionedAmount = 300000
                        },
                        new
                        {
                            CustomerLoanId = 3,
                            CollateralId = 2,
                            CustomerId = 4,
                            EMI = 8400.0,
                            IsCollateraled = false,
                            LoanId = 2,
                            SanctionedAmount = 700000
                        },
                        new
                        {
                            CustomerLoanId = 4,
                            CollateralId = 4,
                            CustomerId = 1,
                            EMI = 46400.0,
                            IsCollateraled = false,
                            LoanId = 4,
                            SanctionedAmount = 5000000
                        },
                        new
                        {
                            CustomerLoanId = 5,
                            CollateralId = 5,
                            CustomerId = 7,
                            EMI = 5300.0,
                            IsCollateraled = false,
                            LoanId = 2,
                            SanctionedAmount = 400000
                        },
                        new
                        {
                            CustomerLoanId = 6,
                            CollateralId = 6,
                            CustomerId = 5,
                            EMI = 10000.0,
                            IsCollateraled = false,
                            LoanId = 3,
                            SanctionedAmount = 1000000
                        },
                        new
                        {
                            CustomerLoanId = 7,
                            CollateralId = 7,
                            CustomerId = 6,
                            EMI = 30000.0,
                            IsCollateraled = false,
                            LoanId = 4,
                            SanctionedAmount = 2500000
                        });
                });

            modelBuilder.Entity("LoanManagementModule.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Interest")
                        .HasColumnType("float");

                    b.Property<int>("LoanMaxAmount")
                        .HasColumnType("int");

                    b.Property<string>("LoanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("LoanTenureInYears")
                        .HasColumnType("tinyint");

                    b.Property<string>("TypeOfCollateralAccepted")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            Interest = 5.9000000000000004,
                            LoanMaxAmount = 500000,
                            LoanName = "Loan1",
                            LoanTenureInYears = (byte)6,
                            TypeOfCollateralAccepted = "Gold House"
                        },
                        new
                        {
                            LoanId = 2,
                            Interest = 7.7999999999999998,
                            LoanMaxAmount = 1500000,
                            LoanName = "Loan2",
                            LoanTenureInYears = (byte)7,
                            TypeOfCollateralAccepted = "Gold Land House"
                        },
                        new
                        {
                            LoanId = 3,
                            Interest = 8.3000000000000007,
                            LoanMaxAmount = 5000000,
                            LoanName = "Loan3",
                            LoanTenureInYears = (byte)8,
                            TypeOfCollateralAccepted = "Land House"
                        },
                        new
                        {
                            LoanId = 4,
                            Interest = 8.9000000000000004,
                            LoanMaxAmount = 10000000,
                            LoanName = "Loan4",
                            LoanTenureInYears = (byte)9,
                            TypeOfCollateralAccepted = "Land"
                        });
                });

            modelBuilder.Entity("LoanManagementModule.Models.CustomersLoan", b =>
                {
                    b.HasOne("LoanManagementModule.Models.Collateral", "Collateral")
                        .WithMany()
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementModule.Models.Customer", "Customer")
                        .WithOne("CustomerLoan")
                        .HasForeignKey("LoanManagementModule.Models.CustomersLoan", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagementModule.Models.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collateral");

                    b.Navigation("Customer");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanManagementModule.Models.Customer", b =>
                {
                    b.Navigation("CustomerLoan");
                });
#pragma warning restore 612, 618
        }
    }
}
